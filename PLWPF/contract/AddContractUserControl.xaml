<UserControl x:Class="PLWPF.AddContractUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PLWPF"
             mc:Ignorable="d" 
             Validation.Error="validation_Error"
             d:DesignHeight="700" d:DesignWidth="500"
    Style="{StaticResource contractBackground}">

    <UserControl.Resources>
        <local:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BooleanToNotBooleanConverter x:Key="BooleanToNotBooleanConverter"/>
        <local:NullToVisibilityConverter  x:Key="NullToVisibilityConverter"/>

    </UserControl.Resources>
    <ScrollViewer>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>

            <Label x:Name="title" Content="Add New Contract"  Style="{StaticResource contractTitle}" Grid.ColumnSpan="2" Grid.Row="0" Margin="0,15,0,0"/>

            <Grid Grid.Row="1" Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Label x:Name="selectMotherLabel" Content="Select mother" Grid.Row="0" Style="{StaticResource subTitle}" HorizontalAlignment="Left"/>
                <ComboBox x:Name="selectMotherComboBox" Grid.Row="1" HorizontalAlignment="Left" Width="120" SelectedItem="{Binding mother, Mode=TwoWay}" SelectionChanged="selectMotherComboBox_SelectionChanged"/>
                <Label x:Name="selectChildLabel" Content="Select child" Grid.Row="0" Grid.Column="1" Margin="25,0,0,0" Style="{StaticResource subTitle}" HorizontalAlignment="Left"/>
                <ComboBox x:Name="selectChildComboBox" Grid.Row="1" Grid.Column="1"  Margin="25,0,0,0" HorizontalAlignment="Left" Width="120" SelectedItem="{Binding child, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" SelectionChanged="selectChildComboBox_SelectionChanged">
                    <ComboBox.Style>
                        <Style>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ElementName=selectMotherComboBox, Path=SelectedIndex}" Value="-1">
                                    <Setter Property="ComboBox.IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ComboBox.Style>
                </ComboBox>
            </Grid>
            <Expander x:Name="selectNannyExpander"  HorizontalAlignment="Stretch" Grid.Row="2" Background="#FFF0F0F0" >
                <Expander.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=selectMotherComboBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Expander.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=selectChildComboBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Expander.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>

                <Expander.Header>
                    <Label Content="Select nanny" Style="{StaticResource subTitle }"/>
                </Expander.Header>
                <Grid Margin="10,0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="distanceRadioButtonLabel" Content="Distance" Grid.Column="0" Grid.Row="2" Style="{StaticResource subTitle_contract}" />
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="0" Margin="10" HorizontalAlignment="Center">
                        <Label x:Name="DistanceLabel" Content="Max Distance:"/>
                        <ComboBox x:Name="DistanceComboBox" Width="50"/>
                    </StackPanel>
                    <Label x:Name="workDaysCheckBox" Content="Working days" Grid.Column="0" Style="{StaticResource subTitle_contract}" />
                    <StackPanel x:Name="WorkingDaysStackPanel" Grid.Column="0" Grid.Row="1" Margin="10" HorizontalAlignment="Center">
                        <Label Content="Select:" HorizontalAlignment="Center"/>
                        <RadioButton x:Name="PerfectMatchHoursRadioButton" GroupName="WorkingDaysGroup" Content="Show only match nannies" />
                        <RadioButton x:Name="AlmostMatchHoursRadioButton" GroupName="WorkingDaysGroup" IsChecked="True">
                            <TextBlock Text="Show almost match nannies (in case no match nanny was found)" MaxWidth="150" TextWrapping="WrapWithOverflow"/>
                        </RadioButton>
                    </StackPanel>
                    <Label x:Name="priceLabel" Content="Price" Grid.Column="2" Style="{StaticResource subTitle_contract}" />
                    <StackPanel x:Name="priceStackPanel" Grid.Column="2" Grid.Row="1" Margin="10" HorizontalAlignment="Center">
                        <Label Content="Enter maximum price:" HorizontalAlignment="Center"/>
                        <StackPanel x:Name="MonthlyRateStackPanel" Orientation="Horizontal" Margin="5">
                            <RadioButton x:Name="MonthlyRateRadioButton" GroupName="priceGroup" Content="Monthly max rate:" IsChecked="True" />
                            <TextBox x:Name="MonthlyRateTextBox" Margin="5,0" Width="40" IsEnabled="{Binding IsChecked, ElementName=MonthlyRateRadioButton}" Text="3000"/>
                        </StackPanel>
                        <StackPanel x:Name="HourlyRateStackPanel" Orientation="Horizontal" Margin="5">
                            <RadioButton x:Name="HourlyRateRadioButton" GroupName="priceGroup" Content="Hourly max rate:" />
                            <TextBox x:Name="HourlyRateTextBox" Margin="5,0" Width="40" IsEnabled="{Binding IsChecked, ElementName=HourlyRateRadioButton}"/>
                        </StackPanel>
                    </StackPanel>
                    <Label x:Name="childAgeCheckBox" Content="Child age" Grid.Column="1" Grid.Row="2" Style="{StaticResource subTitle_contract}" />
                    <StackPanel Orientation="Horizontal" Grid.Row="3" Grid.Column="1" Margin="10" HorizontalAlignment="Center">
                        <Label x:Name="ageLabel" Content="Age:"/>
                        <TextBox x:Name="ageTextBox" IsEnabled="False" Width="25"/>
                    </StackPanel>
                    <Button x:Name="FindnNanny" Content="Find nanny" Grid.ColumnSpan="2" Grid.Row="4" HorizontalAlignment="Stretch" VerticalAlignment="Center" Click="FindnNanny_Click">
                    <Button.Style>
                        <Style>
                            <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding ElementName=HourlyRateRadioButton,Path=IsChecked}" Value="true"/>
                                            <Condition Binding="{Binding ElementName=HourlyRateTextBox,Path=Text}" Value=""/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Button.IsEnabled" Value="false"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding ElementName=MonthlyRateRadioButton,Path=IsChecked}" Value="true"/>
                                            <Condition Binding="{Binding ElementName=MonthlyRateTextBox,Path=Text}" Value=""/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Button.IsEnabled" Value="false"/>
                                    </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                        </Style>
                    </Button.Style>
                   </Button>
                    <StackPanel x:Name="NannyDataStackPanel" Grid.ColumnSpan="2" Grid.Row="5" Visibility="Collapsed" Margin="10">
                        <DataGrid x:Name="NannyDataGrid" IsReadOnly="True" AutoGenerateColumns="False" Grid.Row="1" SelectedItem="{Binding nanny, Mode=TwoWay}" HorizontalAlignment="Center" SelectionChanged="NannyDataGrid_SelectionChanged">
                            <DataGrid.Columns>
                                <DataGridTextColumn x:Name="Id" Binding="{Binding Path=Id}" Header="Id" Width="auto"/>
                                <DataGridTextColumn x:Name="FirstName" Binding="{Binding Path=FirstName}" Header="First Name" Width="auto" />
                                <DataGridTextColumn x:Name="LastName" Binding="{Binding Path=LastName}" Header="Last Name" Width="auto" />
                                <DataGridTextColumn x:Name="BirthDate" Binding="{Binding Path=BirthDate, StringFormat='dd/MM/yyyy'}" Header="BirthDate" Width="auto" />
                                <DataGridTextColumn x:Name="PhoneNumber" Binding="{Binding Path=PhoneNumber}" Header="Phone Number" Width="auto" />
                                <DataGridTextColumn x:Name="Address" Binding="{Binding Path=Address}" Header="Address" Width="auto" />

                                <DataGridTemplateColumn>
                                    <DataGridTemplateColumn.CellTemplate >
                                        <DataTemplate>
                                            <Button x:Name="moreDataGridButton"  Content="More details" Click="moreDataGridButton_Click"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                        <Label x:Name="noResult" Content="No nanny was found" Margin="5" HorizontalAlignment="Center" Visibility="{Binding ItemsSource, Converter={StaticResource NullToVisibilityConverter}, ElementName=NannyDataGrid}"/>
                    </StackPanel>
                </Grid>
            </Expander>


            <Label Content="Contract Details" Grid.Row="5" Style="{StaticResource subTitle}" HorizontalAlignment="center" Margin="15,0"/>
            <Grid x:Name="contractDetailsGrid" Grid.Row="6" HorizontalAlignment="center" VerticalAlignment="Top">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="180"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.Style>
                    <Style>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=selectMotherComboBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Grid.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=selectChildComboBox, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Grid.IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=NannyDataGrid, Path=SelectedIndex}" Value="-1">
                                <Setter Property="Grid.IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Label Content="Child Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="1" VerticalAlignment="Center" Height="24" Width="123"/>
                <TextBlock x:Name="childIdTextBlock" Grid.Column="2" HorizontalAlignment="Left" Height="22" Margin="3,4,0,4" Grid.Row="1" Text="{Binding ChildId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Width="120" />
                <Label Content="End Contract Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="4" VerticalAlignment="Center" Height="24" Width="137"/>
                <DatePicker x:Name="endContractDateDatePicker" Grid.Column="2" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="4" SelectedDate="{Binding EndContractDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Height="24" Width="103"/>
                <Label Content="Hourly Rate:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="6" VerticalAlignment="Center" Height="24" Width="123"/>
                <TextBox x:Name="hourlyRateTextBox1" Grid.Column="2" HorizontalAlignment="Left" Height="22" Margin="3,4,0,4" Grid.Row="6" Text="{Binding HourlyRate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Width="120" LostFocus="hourlyRateTextBox1_LostFocus" />
                <Label Content="Is Introductory Meeting:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="10" VerticalAlignment="Center" Height="24" Width="167"/>
                <CheckBox x:Name="isIntroductoryMeetingCheckBox" Content="" Grid.Column="2" HorizontalAlignment="Left" IsChecked="{Binding IsIntroductoryMeeting, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" Margin="3,8,0,8" Grid.Row="10" VerticalAlignment="Center" Height="14" Width="17"/>
                <Label Content="Is Signed Contract:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="11" VerticalAlignment="Center" Height="24" Width="167"/>
                <CheckBox x:Name="isSignedContractCheckBox" Content="" Grid.Column="2" HorizontalAlignment="Left" IsChecked="{Binding IsSignedContract, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" Margin="3,8,0,8" Grid.Row="11" VerticalAlignment="Center" Height="14" Width="17"/>
                <Label Content="Monthly Rate:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="5" VerticalAlignment="Center" Height="24" Width="123"/>
                <TextBox x:Name="monthlyRateTextBox1" Grid.Column="2" HorizontalAlignment="Left" Height="22" Margin="3,4,0,4" Grid.Row="5" Text="{Binding MonthlyRate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Width="120" LostFocus="monthlyRateTextBox1_LostFocus" />
                <Label Content="Nanny Id:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="2" VerticalAlignment="Center" Height="24" Width="107"/>
                <TextBlock x:Name="nannyIdTextBlock" Grid.Column="2" HorizontalAlignment="Left" Height="22" Margin="3,4,0,4" Grid.Row="2" Text="{Binding NannyId, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Width="120"/>
                <Label Content="Paid By:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="9" VerticalAlignment="Center" Height="24" Width="107"/>
                <ComboBox x:Name="paidByComboBox" Grid.Column="2" SelectedItem="{Binding PaidBy, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Height="20" Margin="3,5,0,5" Grid.Row="9" VerticalAlignment="Center" Width="120"/>
                <Label Content="Pay Per Hour Or Month:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="8" VerticalAlignment="Center" Height="24" Width="177"/>
                <ComboBox x:Name="payPerHourOrMonthComboBox" Grid.Column="2" SelectedItem="{Binding PayPerHourOrMonth, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true}" HorizontalAlignment="Left" Height="20" Margin="3,5,0,5" Grid.Row="8" VerticalAlignment="Center" Width="120" SelectionChanged="payPerHourOrMonthComboBox_SelectionChanged"/>
                <Label Content="Start Contract Date:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="3" VerticalAlignment="Center" Height="24" Width="149"/>
                <DatePicker x:Name="startContractDateDatePicker" Grid.Column="2" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="3" SelectedDate="{Binding StartContractDate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Height="24" Width="103"/>
                <Label Content="Number Of Weekly Hours:" Grid.Column="0" HorizontalAlignment="Left" Margin="3,3,0,3" Grid.Row="7" VerticalAlignment="Center" Height="24" Width="167"/>
                <TextBox x:Name="weeklyHoursTextBox" Grid.Column="2" HorizontalAlignment="Left" Height="22" Margin="3,4,0,4" Grid.Row="7" Text="{Binding WeeklyHours, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" Width="120" LostFocus="weeklyHoursTextBox_LostFocus" />
                <StackPanel Grid.Row="12" Orientation="Horizontal" HorizontalAlignment="Center" Grid.ColumnSpan="2">
                    <Label Content="Neto Rate:"  HorizontalAlignment="Left" Margin="3,17,0,3" VerticalAlignment="Center" Grid.ColumnSpan="2" Height="24" FontWeight="Bold" />
                    <TextBox x:Name="netoRateTextBlock"  HorizontalAlignment="Left" Height="22" Margin="3,17,0,4" Text="{Binding NetoRate, Mode=TwoWay, NotifyOnValidationError=true, ValidatesOnExceptions=true, ValidatesOnDataErrors=True}" VerticalAlignment="Center" IsEnabled="False" Width="90"/>
                </StackPanel>

            </Grid>

            <Button x:Name="addContractButton" Content="Add Contract" Grid.Row="7" Margin="15" HorizontalAlignment="Stretch"  Click="addContractButton_Click">
                <Button.Style>
                    <Style>
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding ElementName=payPerHourOrMonthComboBox, Path=SelectedValue}" Value="Hour"/>
                                    <Condition Binding="{Binding ElementName=hourlyRateTextBox1, Path=Text}" Value=""/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    <Setter Property="Button.IsEnabled" Value="False"/>
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

        </Grid>
    </ScrollViewer>
</UserControl>
